
pipeline:

  load-cache:
    image: drillster/drone-volume-cache
    volumes: [/var/lib/docker/tmp:/cache]
    restore: true
    mount:
      - .gradle/caches
      - .gradle/wrapper

  build-snapshot:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew build -Psnapshot=true
    when:
      event: [push]

  libs-snapshot:
    image: openjdk:11-slim
    commands:
      - export GRADLE_USER_HOME=$${DRONE_WORKSPACE}/.gradle
      - ./gradlew publish -Psnapshot=true -PdeployUser=$SNAPSHOT_USER -PdeployPassword=$SNAPSHOT_PASS
    secrets: [ snapshot_user, snapshot_pass]
    when:
      event: push
      branch: master

  trigger-ldproxy:
    image: plugins/downstream:1.2.0
    server: https://ci.ldproxy.net
    repositories: 
      - interactive-instruments/ldproxy@master
    fork: true
    secrets: [ downstream_token]
    when:
      event: push
      branch: master

  save-cache:
    image: drillster/drone-volume-cache
    volumes: [/var/lib/docker/tmp:/cache]
    rebuild: true
    mount:
      - .gradle/caches
      - .gradle/wrapper
